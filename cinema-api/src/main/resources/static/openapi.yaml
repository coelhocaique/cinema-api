openapi: 3.0.1
info:
  title: Cinema API
  description: >
    # Author
    <strong>Caique Dos Santos Coelho, Computer Scientist.<br/>
    [Linkedin profile](https://www.linkedin.com/in/coelhocaiquesantos96) <br/>
    [Github profile](https://github.com/coelhocaique)
    </strong>
    </strong>

  version: 1.0.0
servers:
  - url: 'http://localhost:8888'
tags:
  - name: movies
    description: All information about the available movies
  - name: movie-sessions
    description: All information about movie sessions and times
  - name: movie-reviews
    description: All reviews about your preferred movie
paths:
  /movies:
    post:
      tags:
        - movies
      summary: Create a new movie
      operationId: create-movie
      requestBody:
        description: Data needed to create a new debt
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieRequest'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - movies
      summary: Find all available movies
      operationId: find-all-movies
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovieResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/movies/{id}':
    get:
      tags:
        - movies
      summary: Find a single movie
      description: Returns a single debt
      operationId: find-movie-by-id
      parameters:
        - name: id
          in: path
          description: movie Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/movies/{movieId}/sessions':
    post:
      tags:
        - movie-sessions
      summary: Create a new movie session time
      operationId: create-movie-session
      parameters:
        - name: movieId
          in: path
          description: movie Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Data needed to create movie session
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieSessionRequest'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovieSessionResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - movie-sessions
      summary: Find movie sessions
      description: Find all available movie sessions for the specified movie
      operationId: find-movie-session
      parameters:
        - name: movieId
          in: path
          description: movie Id
          required: true
          schema:
            type: string
            format: uuid
        - name: dateTime
          in: query
          description: With this parameter you can query movie sessions on specified date with time greater than equal the time informed
          schema:
            type: string
            format: YYYY-MM-DDTHH:MM:SS
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovieSessionResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/movies/{movieId}/sessions/{id}':
    delete:
      tags:
        - movie-sessions
      summary: Deletes a movie session
      operationId: delete-movie-session
      parameters:
        - name: movieId
          in: path
          description: movie Id
          required: true
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          description: movie session Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: successful operation
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  '/movies/{movieId}/reviews':
    post:
      tags:
        - movie-reviews
      summary: Create a new movie review
      operationId: create-movie-review
      parameters:
        - name: movieId
          in: path
          description: movie Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Data needed to create movie review
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReviewResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - movie-reviews
      summary: Find All movie reviews
      description: Find all movie reviews for the specified movie
      operationId: find-movie-reviews
      parameters:
        - name: movieId
          in: path
          description: movie Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReviewResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    MovieRequest:
      type: object
      required:
        - imdb_id
      properties:
        imdb_id:
          type: string
          description: IMDBId of public API Omdbapi
          format: double

    MovieResponse:
      type: object
      required:
        - id
        - title
        - imdb_rating
        - released
        - runtime
        - ratings
        - links
      properties:
        id:
          type: string
          format: uuid
          description: the movie id
        title:
          type: string
          description: movie title
        imdb_rating:
          type: string
          description: imdb Rating
        released:
          type: string
          description: movie release date
        runtime:
          type: string
          description: movie runtime
        ratings:
          type: array
          description: movie ratings
          items:
            $ref: '#/components/schemas/OmdbRatingsResponse'
        links:
          type: array
          description: links with all operations for the movie
          items:
            $ref: '#/components/schemas/Link'

    OmdbRatingsResponse:
      type: object
      required:
        - source
        - value
      properties:
        source:
          type: string
          description: rating source
        value:
          type: string
          description: rating value

    ReviewRequest:
      type: object
      required:
        - rating
      properties:
        rating:
          type: number
          description: rating from 1 to 5 stars
          format: double
        comment:
          type: string
          description: rating comment

    ReviewResponse:
      type: object
      required:
        - id
        - movie_id
        - rating
        - comment
        - created_at
        - links
      properties:
        id:
          type: string
          format: uuid
          description: the review id
        movie_id:
          type: string
          format: uuid
          description: the movie id
        rating:
          type: string
          description: rating of the specfied review
        comment:
          type: string
          description: comment of the specfied review
        links:
          type: array
          description: links with all operations for the review
          items:
            $ref: '#/components/schemas/Link'

    MovieSessionRequest:
      type: object
      required:
        - price
        - session_date_time
      properties:
        price:
          type: number
          description: session price
          format: double
        session_date_time:
          type: string
          description: rating comment
          format: datetime
        room:
          type: string
          description: the session room if exists

    MovieSessionResponse:
      type: object
      required:
        - id
        - movie_id
        - price
        - date
        - time
        - links
      properties:
        id:
          type: string
          format: uuid
          description: the movie session id
        movie_id:
          type: string
          format: uuid
          description: the movie id
        price:
          type: number
          description: session price
          format: double
        date:
          type: string
          description: session date (YYYY-MM-DD)
          format: date
        time:
          type: string
          description: session time (HH-MM-SS)
          format: date
        links:
          type: array
          description: links with all operations for the movie session
          items:
            $ref: '#/components/schemas/Link'

    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: error message

    Link:
      type: object
      required:
        - method
        - href
      properties:
        method:
          type: string
        href:
          type: string
